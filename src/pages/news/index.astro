---
import BaseLayout from "@/layouts/BaseLayout.astro";
import NewsCard from "@/components/news/NewsCard.astro";
import type { ComponentProps } from "astro/types";

const news: Array<ComponentProps<typeof NewsCard>> = [
  { title: "title 1", slug: "title-1", category: "meeting" },
  { title: "title 2", slug: "title-2", category: "news" },
  { title: "title 3", slug: "title-3", category: "news" },
  { title: "title 4", slug: "title-4", category: "initiative" },
  { title: "title 5", slug: "title-5", category: "meeting" },
  { title: "title 6", slug: "title-6", category: "meeting" },
];

const categories = [...new Set(news.map(({ category }) => category))];
---

<BaseLayout title="">
  <main class="space-y-40 py-24 md:py-48">
    <section class="mx-auto grid max-w-screen-lg px-4" id="news">
      <div class="space-y-4 text-center">
        <h1 class="text-4xl">Newsroom</h1>
        <p class="md:text-lg">
          The latest HELP news and press releases - the organization, our
          partners, meetings and initiatives.
        </p>
      </div>
      <nav class="my-8">
        <ul
          class="flex flex-wrap justify-center gap-4 capitalize *:btn *:btn-outline *:btn-sm *:min-w-16 *:rounded-full"
        >
          <button data-category="all" class="btn-active capitalize">All</button>
          {
            categories.map((category) => (
              <button
                data-category={category}
                set:text={category}
                class="capitalize"
              />
            ))
          }
        </ul>
      </nav>
      <ul class="grid gap-4 sm:grid-cols-2 md:grid-cols-3">
        {
          news.map((post) => (
            <li
              style={`view-transition-name: ${post.slug};`}
              data-category={post.category}
            >
              <NewsCard {...post} />
            </li>
          ))
        }
      </ul>
    </section>
  </main>
</BaseLayout>

<script>
  const $categoryBtns = document.querySelectorAll<HTMLButtonElement>(
    "button[data-category]",
  );
  const $posts = document.querySelectorAll<HTMLLIElement>("li[data-category]");

  const filter = (category: string) => {
    if (category === "all")
      return $posts.forEach((post) => post.classList.remove("hidden"));
    $posts.forEach((post) =>
      category === post.dataset.category
        ? post.classList.remove("hidden")
        : post.classList.add("hidden"),
    );
  };

  $categoryBtns.forEach((btn) =>
    btn.addEventListener("click", ({ target }) => {
      const { category } = btn.dataset;

      if (!category) return;
      document.startViewTransition
        ? document.startViewTransition(() => filter(category))
        : filter(category);

      $categoryBtns.forEach((btn) => btn.classList.remove("btn-active"));
      (target as HTMLButtonElement).classList.add("btn-active");
    }),
  );
</script>
