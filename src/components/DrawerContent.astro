---
import { SITE_LINKS } from "@/constants.ts";
import type { Link, LinkBase } from "@/types";
import { getRelativeLocaleUrl } from "astro:i18n";
import { useTranslation, type AvailableLocales } from "i18n";

const { HOME, BRIEF, DOCUMENTS, COVID_19, NEWS, ABOUT, FLAGSHIP } = SITE_LINKS;

const currentLocale = Astro.currentLocale as AvailableLocales;
const { pathname } = Astro.url;

const t = useTranslation(currentLocale);

const links: Array<Link | (LinkBase & { links: Link[] })> = [
  { title: t("link.home"), href: getRelativeLocaleUrl(currentLocale, HOME) },
  {
    title: t("link.who-we-are"),
    href: getRelativeLocaleUrl(currentLocale, ABOUT),
  },
  {
    title: t("dropdown.what-we-do"),
    links: [
      {
        title: t("link.in-brief"),
        href: getRelativeLocaleUrl(currentLocale, BRIEF),
      },

      {
        title: t("link.documentation"),
        href: getRelativeLocaleUrl(currentLocale, DOCUMENTS),
      },
      {
        title: t("link.covid-19"),
        href: getRelativeLocaleUrl(currentLocale, COVID_19),
      },
    ],
  },
  {
    title: t("link.flagship-initiatives"),
    href: getRelativeLocaleUrl(currentLocale, FLAGSHIP),
  },
  {
    title: t("link.newsroom"),
    href: getRelativeLocaleUrl(currentLocale, NEWS),
  },
];
---

<div class="grid">
  <label for="drawer" class="btn btn-square btn-ghost ms-auto">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-6 w-6"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
      ><path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M6 18L18 6M6 6l12 12"></path></svg
    >
  </label>
  <nav>
    <ul class="menu menu-lg">
      {
        links.map((item) => {
          const isDropdown = "links" in item;
          return (
            <li>
              {isDropdown ? (
                <>
                  <div class="menu-title">{item.title}</div>
                  <ul>
                    {item.links.map(({ href, title }) => (
                      <li>
                        <a
                          data-astro-reload
                          {href}
                          set:text={title}
                          class:list={{ active: href === pathname }}
                        />
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  data-astro-reload
                  href={item.href}
                  set:text={item.title}
                  class:list={{ active: item.href === pathname }}
                />
              )}
            </li>
          );
        })
      }
    </ul>
  </nav>
</div>
