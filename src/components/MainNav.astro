---
import { SITE_LINKS } from "@/constants.ts";
import type { Link, LinkBase } from "@/types";
import { getRelativeLocaleUrl } from "astro:i18n";
import { useTranslation, type AvailableLocales } from "i18n";

const { HOME, BRIEF, DOCUMENTS, COVID_19, NEWS, ABOUT, FLAGSHIP } = SITE_LINKS;

const currentLocale = Astro.currentLocale as AvailableLocales;
const { pathname } = Astro.url;

const t = useTranslation(currentLocale);

const links: Array<Link | (LinkBase & { links: Link[] })> = [
  { title: t("link.home"), href: getRelativeLocaleUrl(currentLocale, HOME) },
  {
    title: t("link.who-we-are"),
    href: getRelativeLocaleUrl(currentLocale, ABOUT),
  },
  {
    title: t("dropdown.what-we-do"),
    links: [
      {
        title: t("link.in-brief"),
        href: getRelativeLocaleUrl(currentLocale, BRIEF),
      },

      {
        title: t("link.documentation"),
        href: getRelativeLocaleUrl(currentLocale, DOCUMENTS),
      },
      {
        title: t("link.covid-19"),
        href: getRelativeLocaleUrl(currentLocale, COVID_19),
      },
    ],
  },
  {
    title: t("link.newsroom"),
    href: getRelativeLocaleUrl(currentLocale, NEWS),
  },
  {
    title: t("link.flagship-initiatives"),
    href: getRelativeLocaleUrl(currentLocale, FLAGSHIP),
  },
];
---

<ul class="flex items-center gap-8 max-md:hidden lg:text-lg">
  {
    links.map((item) => {
      const isDropdown = "links" in item;
      return (
        <li>
          {isDropdown ? (
            <div class="group dropdown dropdown-hover">
              <div
                tabindex="0"
                role="button"
                class="flex items-center uppercase"
                class:list={{
                  "font-bold underline": item.links.some(
                    ({ href }) => pathname === href,
                  ),
                }}
              >
                {item.title}
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="ms-1 inline-block transition-transform group-hover:rotate-180"
                >
                  <path d="m6 9 6 6 6-6" />
                </svg>
              </div>
              <ul class="menu dropdown-content menu-lg z-[1] w-52 rounded-box bg-base-100 p-2 capitalize text-neutral shadow">
                {item.links.map(({ href, title }) => (
                  <li>
                    <a
                      {href}
                      set:text={title}
                      class:list={{ active: href === pathname }}
                    />
                  </li>
                ))}
              </ul>
            </div>
          ) : (
            <a
              class="link-hover link uppercase"
              class:list={{
                "font-bold underline": item.href === pathname,
              }}
              href={item.href}
              set:text={item.title}
            />
          )}
        </li>
      );
    })
  }
</ul>
